{"ast":null,"code":"import { ptUserServerToPtUser, ptCommentsServerToPtComments, ptTasksServerToPtTasks } from './';\nimport { PriorityEnum, StatusEnum } from './enums';\nexport function ptItemServerToPtItem(item) {\n  return {\n    ...item,\n    estimate: item.estimate ? parseInt(item.estimate, 10) : 0,\n    dateCreated: new Date(item.dateCreated),\n    dateModified: new Date(item.dateModified),\n    dateDeleted: item.dateDeleted ? new Date(item.dateDeleted) : undefined,\n    assignee: ptUserServerToPtUser(item.assignee),\n    comments: item.comments ? ptCommentsServerToPtComments(item.comments) : [],\n    tasks: item.tasks ? ptTasksServerToPtTasks(item.tasks) : []\n  };\n}\nexport function ptItemsServerToPtItems(items) {\n  return items.map(ptItemServerToPtItem);\n}\n\n// type tests\nconst b = {\n  id: 0,\n  title: 'title',\n  description: 'description',\n  priority: PriorityEnum.Medium,\n  status: StatusEnum.Open,\n  estimate: '10',\n  type: 'Bug',\n  assignee: {\n    id: 0,\n    fullName: 'fullName',\n    avatar: 'avatarUrl',\n    dateCreated: 'dateCreated',\n    dateModified: 'dateModified',\n    dateDeleted: 'dateDeleted'\n  },\n  tasks: [{\n    id: 0,\n    title: 'title',\n    completed: false,\n    dateCreated: 'dateCreated',\n    dateModified: 'dateModified',\n    dateDeleted: 'dateDeleted'\n  }],\n  comments: [{\n    id: 0,\n    title: 'title',\n    user: {\n      id: 0,\n      fullName: 'fullName',\n      avatar: 'avatarUrl',\n      dateCreated: 'dateCreated',\n      dateModified: 'dateModified',\n      dateDeleted: 'dateDeleted'\n    },\n    dateCreated: 'dateCreated',\n    dateModified: 'dateModified',\n    dateDeleted: 'dateDeleted'\n  }],\n  dateCreated: 'dateCreated',\n  dateModified: 'dateModified',\n  dateDeleted: 'dateDeleted'\n};\nconst c = {\n  id: 0,\n  title: 'title',\n  description: 'description',\n  priority: PriorityEnum.Medium,\n  status: StatusEnum.Open,\n  estimate: 0,\n  type: 'Bug',\n  assignee: {\n    id: 0,\n    fullName: 'fullName',\n    avatar: 'avatarUrl',\n    dateCreated: new Date(),\n    dateModified: new Date(),\n    dateDeleted: new Date()\n  },\n  tasks: [{\n    id: 0,\n    title: 'title',\n    completed: false,\n    dateCreated: new Date(),\n    dateModified: new Date(),\n    dateDeleted: new Date()\n  }],\n  comments: [{\n    id: 0,\n    title: 'title',\n    user: {\n      id: 0,\n      fullName: 'fullName',\n      avatar: 'avatarUrl',\n      dateCreated: new Date(),\n      dateModified: new Date(),\n      dateDeleted: new Date()\n    },\n    dateCreated: new Date(),\n    dateModified: new Date(),\n    dateDeleted: new Date()\n  }],\n  dateCreated: new Date(),\n  dateModified: new Date(),\n  dateDeleted: new Date()\n};","map":{"version":3,"names":["ptUserServerToPtUser","ptCommentsServerToPtComments","ptTasksServerToPtTasks","PriorityEnum","StatusEnum","ptItemServerToPtItem","item","estimate","parseInt","dateCreated","Date","dateModified","dateDeleted","undefined","assignee","comments","tasks","ptItemsServerToPtItems","items","map","b","id","title","description","priority","Medium","status","Open","type","fullName","avatar","completed","user","c"],"sources":["/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/core/models/domain/pt-item.model.ts"],"sourcesContent":["import { PtObjectBase, PtObjectBaseServer, PtTask, PtComment, PtUser, PtUserServer, PtCommentServer, PtTaskServer, ptUserServerToPtUser, ptCommentsServerToPtComments, ptTasksServerToPtTasks } from './';\nimport { PriorityEnum, StatusEnum } from './enums';\nimport { PtItemType } from '../domain/types';\n\ntype PtItemCommon = {\n    description?: string;\n    priority: PriorityEnum;\n    status: StatusEnum;\n    type: PtItemType;\n};\n\ntype PtItemWithAssignee = {\n    assignee: PtUser;\n};\n\ntype PtItemWithAssigneeServer = {\n    assignee: PtUserServer;\n};\n\ntype PtItemWithComments = {\n    comments: PtComment[];\n};\n\ntype PtItemWithCommentsServer = {\n    comments: PtCommentServer[];\n};\n\ntype PtItemWithTasks = {\n    tasks: PtTask[];\n};\n\ntype PtItemWithTasksServer = {\n    tasks: PtTaskServer[];\n};\n\ntype PtItemWithEstimate = {\n    estimate: number;\n};\n\ntype PtItemWithEstimateServer = {\n    estimate: string;\n};\n\nexport type PtItem = PtObjectBase & PtItemCommon & PtItemWithEstimate & PtItemWithAssignee & PtItemWithComments & PtItemWithTasks;\nexport type PtItemServer = PtObjectBaseServer & PtItemCommon & PtItemWithEstimateServer & PtItemWithAssigneeServer & PtItemWithCommentsServer & PtItemWithTasksServer;\n\n\nexport function ptItemServerToPtItem(item: PtItemServer): PtItem {\n    return {\n        ...item,\n        estimate: item.estimate ? parseInt(item.estimate, 10) : 0,\n        dateCreated: new Date(item.dateCreated),\n        dateModified: new Date(item.dateModified),\n        dateDeleted: item.dateDeleted ? new Date(item.dateDeleted) : undefined,\n        assignee: ptUserServerToPtUser(item.assignee),\n        comments: item.comments ? ptCommentsServerToPtComments(item.comments) : [],\n        tasks: item.tasks ? ptTasksServerToPtTasks(item.tasks) : []\n    };\n}\n\nexport function ptItemsServerToPtItems(items: PtItemServer[]): PtItem[] {\n    return items.map(ptItemServerToPtItem);\n}\n\n// type tests\nconst b: PtItemServer = {\n    id: 0,\n    title: 'title',\n    description: 'description',\n    priority: PriorityEnum.Medium,\n    status: StatusEnum.Open,\n    estimate: '10',\n    type: 'Bug',\n    assignee: {\n        id: 0,\n        fullName: 'fullName',\n        avatar: 'avatarUrl',\n        dateCreated: 'dateCreated',\n        dateModified: 'dateModified',\n        dateDeleted: 'dateDeleted'\n    },\n    tasks: [\n        {\n            id: 0,\n            title: 'title',\n            completed: false,\n            dateCreated: 'dateCreated',\n            dateModified: 'dateModified',\n            dateDeleted: 'dateDeleted'\n        }\n    ],\n    comments: [\n        {\n            id: 0,\n            title: 'title',\n            user: {\n                id: 0,\n                fullName: 'fullName',\n                avatar: 'avatarUrl',\n                dateCreated: 'dateCreated',\n                dateModified: 'dateModified',\n                dateDeleted: 'dateDeleted'\n            },\n            dateCreated: 'dateCreated',\n            dateModified: 'dateModified',\n            dateDeleted: 'dateDeleted'\n        }\n    ],\n    dateCreated: 'dateCreated',\n    dateModified:   'dateModified',\n    dateDeleted: 'dateDeleted',\n};\n\nconst c: PtItem = {\n    id: 0,\n    title: 'title',\n    description: 'description',\n    priority: PriorityEnum.Medium,\n    status: StatusEnum.Open,\n    estimate: 0,\n    type: 'Bug',\n    assignee: {\n        id: 0,\n        fullName: 'fullName',\n        avatar: 'avatarUrl',\n        dateCreated: new Date(),\n        dateModified: new Date(),\n        dateDeleted: new Date(),\n    },\n    tasks: [\n        {\n            id: 0,\n            title: 'title',\n            completed: false,\n            dateCreated: new Date(),\n            dateModified: new Date(),\n            dateDeleted: new Date(),\n        }\n    ],\n    comments: [\n        {\n            id: 0,\n            title: 'title',\n            user: {\n                id: 0,\n                fullName: 'fullName',\n                avatar: 'avatarUrl',\n                dateCreated: new Date(),\n                dateModified: new Date(),\n                dateDeleted: new Date(),\n            },\n            dateCreated: new Date(),\n            dateModified: new Date(),\n            dateDeleted: new Date(),\n        }\n    ],\n    dateCreated: new Date(),\n    dateModified:  new Date(),\n    dateDeleted: new Date(),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}