{"ast":null,"code":"var _jsxFileName = \"/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/modules/backlog/components/item-chitchat/pt-item-chitchat.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport './pt-item-chitchat.css';\nimport { NewCommentForm } from \"./new-comment-form\";\nimport { PtCommentDisplayComponent } from \"./comment-display\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PtItemChitchatComponent(props) {\n  _s();\n  const [comments, setComments] = useState(props.comments);\n  const addComment = text => {\n    const newComment = {\n      title: text\n    };\n    props.addCommentMutation.mutate(newComment, {\n      onSuccess(createdTask) {\n        const newComments = [createdTask, ...comments];\n        setComments(newComments);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      addComment: addComment,\n      currentUser: props.currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(PtCommentDisplayComponent, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PtItemChitchatComponent, \"95dW5PAc34ffX0xxdtVE+vxLWiY=\");\n_c = PtItemChitchatComponent;\nvar _c;\n$RefreshReg$(_c, \"PtItemChitchatComponent\");","map":{"version":3,"names":["useState","NewCommentForm","PtCommentDisplayComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","PtItemChitchatComponent","props","_s","comments","setComments","addComment","text","newComment","title","addCommentMutation","mutate","onSuccess","createdTask","newComments","children","currentUser","fileName","_jsxFileName","lineNumber","columnNumber","className","map","comment","id","_c","$RefreshReg$"],"sources":["/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/modules/backlog/components/item-chitchat/pt-item-chitchat.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { PtComment, PtUser } from \"../../../../core/models/domain\";\nimport { PtNewComment } from \"../../../../shared/models/dto/pt-new-comment\";\n\nimport './pt-item-chitchat.css';\nimport { NewCommentForm } from \"./new-comment-form\";\nimport { UseMutationResult } from \"react-query\";\nimport { PtCommentDisplayComponent } from \"./comment-display\";\n\nexport type PtItemChitchatComponentProps = {\n    comments: PtComment[];\n    currentUser: PtUser;\n    addCommentMutation: UseMutationResult<PtComment, unknown, PtNewComment, unknown>;\n};\n\nexport function PtItemChitchatComponent(props: PtItemChitchatComponentProps) {\n\n    const [comments, setComments] = useState<PtComment[]>(props.comments);\n\n    const addComment = (text: string) => {\n        const newComment: PtNewComment = { title: text };\n        props.addCommentMutation.mutate(newComment, {\n            onSuccess(createdTask) {\n                const newComments = [createdTask, ...comments];\n                setComments(newComments);\n            },\n        });\n    };\n\n\n    return (\n        <>\n            <NewCommentForm \n                addComment={addComment}  \n                currentUser={props.currentUser} \n            />\n\n            <hr />\n\n            <ul className=\"list-unstyled\">\n                {\n                    comments.map(comment => {\n                        return (\n                            <PtCommentDisplayComponent key={comment.id} comment={comment} />\n                        );\n                    })\n                }\n            </ul>\n        </>\n    );\n   \n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAIhC,OAAO,wBAAwB;AAC/B,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,yBAAyB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQ9D,OAAO,SAASC,uBAAuBA,CAACC,KAAmC,EAAE;EAAAC,EAAA;EAEzE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAcQ,KAAK,CAACE,QAAQ,CAAC;EAErE,MAAME,UAAU,GAAIC,IAAY,IAAK;IACjC,MAAMC,UAAwB,GAAG;MAAEC,KAAK,EAAEF;IAAK,CAAC;IAChDL,KAAK,CAACQ,kBAAkB,CAACC,MAAM,CAACH,UAAU,EAAE;MACxCI,SAASA,CAACC,WAAW,EAAE;QACnB,MAAMC,WAAW,GAAG,CAACD,WAAW,EAAE,GAAGT,QAAQ,CAAC;QAC9CC,WAAW,CAACS,WAAW,CAAC;MAC5B;IACJ,CAAC,CAAC;EACN,CAAC;EAGD,oBACIhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA,CAACH,cAAc;MACXW,UAAU,EAAEA,UAAW;MACvBU,WAAW,EAAEd,KAAK,CAACc;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENtB,OAAA;MAAIuB,SAAS,EAAC,eAAe;MAAAN,QAAA,EAErBX,QAAQ,CAACkB,GAAG,CAACC,OAAO,IAAI;QACpB,oBACIzB,OAAA,CAACF,yBAAyB;UAAkB2B,OAAO,EAAEA;QAAQ,GAA7BA,OAAO,CAACC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAAC;MAExE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAAA,eACP,CAAC;AAGX;AAACjB,EAAA,CApCeF,uBAAuB;AAAAwB,EAAA,GAAvBxB,uBAAuB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}