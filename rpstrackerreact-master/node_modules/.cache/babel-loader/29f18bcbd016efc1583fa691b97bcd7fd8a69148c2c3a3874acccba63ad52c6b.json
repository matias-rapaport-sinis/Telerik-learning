{"ast":null,"code":"var _jsxFileName = \"/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/modules/backlog/pages/backlog/backlog-page.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport './backlog-page.css';\nimport { AppPresetFilter } from \"../../../../shared/components/preset-filter/preset-filter\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AddItemModal } from \"../../components/add-item-modal/add-item-modal\";\nimport { BacklogList } from \"../../components/backlog-list/backlog-list\";\nimport { PtBacklogServiceContext, PtStoreContext } from \"../../../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BacklogPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const store = useContext(PtStoreContext);\n  const backlogService = useContext(PtBacklogServiceContext);\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const {\n    preset\n  } = useParams();\n  const [currentPreset, setCurrentPreset] = useState(preset ? preset : 'open');\n  const useItems = function () {\n    _s();\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n    return useQuery(getQueryKey(), () => backlogService.getItems(...params));\n  };\n  _s(useItems, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const queryResult = useItems(currentPreset);\n  const items = queryResult.data;\n  function getQueryKey() {\n    return ['items', currentPreset];\n  }\n  const addItemMutation = useMutation(async newItem => {\n    if (store.value.currentUser) {\n      const createdItem = await backlogService.addNewPtItem(newItem, store.value.currentUser);\n      return createdItem;\n    }\n  });\n  useEffect(() => {\n    navigate(`/backlog/${[currentPreset]}`);\n  }, [currentPreset]);\n  const [isAddModalShowing, setIsAddModalShowing] = useState(false);\n  function onSelectPresetTap(preset) {\n    setCurrentPreset(preset);\n  }\n  function toggleModal() {\n    setIsAddModalShowing(!isAddModalShowing);\n  }\n  function onNewItemSave(newItem) {\n    return addItemMutation.mutateAsync(newItem, {\n      onSuccess(createdItem, variables, context) {\n        queryClient.invalidateQueries(getQueryKey());\n      }\n    });\n  }\n  if (queryResult.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n  if (!items) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h2\",\n        children: \"Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-toolbar mb-2 mb-md-0\",\n        children: [/*#__PURE__*/_jsxDEV(AppPresetFilter, {\n          selectedPreset: currentPreset,\n          onSelectPresetTap: onSelectPresetTap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group mr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-outline-secondary\",\n            onClick: toggleModal,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BacklogList, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddItemModal, {\n      onNewItemSave: onNewItemSave,\n      modalShowing: isAddModalShowing,\n      setIsAddModalShowing: setIsAddModalShowing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s2(BacklogPage, \"bHjbR1VPvPUlukatzyWeb9ZzvSI=\", true, function () {\n  return [useQueryClient, useNavigate, useParams, useMutation];\n});\n_c = BacklogPage;\nvar _c;\n$RefreshReg$(_c, \"BacklogPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","useParams","AppPresetFilter","useMutation","useQuery","useQueryClient","AddItemModal","BacklogList","PtBacklogServiceContext","PtStoreContext","jsxDEV","_jsxDEV","BacklogPage","_s2","_s","$RefreshSig$","store","backlogService","queryClient","navigate","preset","currentPreset","setCurrentPreset","useItems","_len","arguments","length","params","Array","_key","getQueryKey","getItems","queryResult","items","data","addItemMutation","newItem","value","currentUser","createdItem","addNewPtItem","isAddModalShowing","setIsAddModalShowing","onSelectPresetTap","toggleModal","onNewItemSave","mutateAsync","onSuccess","variables","context","invalidateQueries","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","className","selectedPreset","type","onClick","modalShowing","_c","$RefreshReg$"],"sources":["/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/modules/backlog/pages/backlog/backlog-page.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport './backlog-page.css';\n\nimport { PresetType } from \"../../../../core/models/domain/types\";\nimport { PtItem } from \"../../../../core/models/domain\";\nimport { AppPresetFilter } from \"../../../../shared/components/preset-filter/preset-filter\";\nimport { PtNewItem } from \"../../../../shared/models/dto/pt-new-item\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AddItemModal } from \"../../components/add-item-modal/add-item-modal\";\nimport { BacklogList } from \"../../components/backlog-list/backlog-list\";\nimport { PtBacklogServiceContext, PtStoreContext } from \"../../../../App\";\n\n\nexport function BacklogPage() {\n    const store = useContext(PtStoreContext);\n    const backlogService = useContext(PtBacklogServiceContext);\n\n    \n\n    const queryClient = useQueryClient();\n    const navigate = useNavigate();\n    \n    const { preset } = useParams() as {preset: PresetType};\n    const [currentPreset, setCurrentPreset] = useState<PresetType>(preset ? preset : 'open');\n\n    const useItems = (...params: Parameters<typeof backlogService.getItems>) => {\n        return useQuery<PtItem[], Error>(getQueryKey(), () => backlogService.getItems(...params));\n    }\n    const queryResult = useItems(currentPreset);\n    const items = queryResult.data;\n\n    function getQueryKey() {\n        return ['items', currentPreset];\n    }\n\n    const addItemMutation = useMutation(async (newItem: PtNewItem) => {\n        if (store.value.currentUser) {\n            const createdItem = await backlogService.addNewPtItem(newItem, store.value.currentUser);\n            return createdItem;\n        }\n    });\n    \n    useEffect(()=>{\n        navigate(`/backlog/${[currentPreset]}`);\n    },[currentPreset]);\n    \n    const [isAddModalShowing, setIsAddModalShowing] = useState(false);\n\n    function onSelectPresetTap(preset: PresetType) {\n        setCurrentPreset(preset);\n    }\n\n    function toggleModal() {\n        setIsAddModalShowing(!isAddModalShowing);\n    }\n\n    function onNewItemSave(newItem: PtNewItem) {\n        return addItemMutation.mutateAsync(newItem, {\n            onSuccess(createdItem, variables, context) {\n                queryClient.invalidateQueries(getQueryKey());\n            },\n        });\n    }\n\n\n    if (queryResult.isLoading) {\n        return (\n            <div>\n                Loading...\n            </div>\n        );\n    }\n    \n    if (!items) {\n        return (\n            <div>No items</div>\n        );\n    }\n\n\n\n    return (\n        <React.Fragment>\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\n                <h1 className=\"h2\">Backlog</h1>\n                <div className=\"btn-toolbar mb-2 mb-md-0\">\n                    <AppPresetFilter selectedPreset={currentPreset} onSelectPresetTap={onSelectPresetTap} />\n\n                    <div className=\"btn-group mr-2\">\n                        <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={toggleModal}>Add</button>\n                    </div>\n                </div>\n            </div>\n\n            <BacklogList items={items} />\n\n            <AddItemModal \n                onNewItemSave={onNewItemSave} \n                modalShowing={isAddModalShowing}\n                setIsAddModalShowing={setIsAddModalShowing}\n                />\n                \n        </React.Fragment >\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}