{"ast":null,"code":"import { CONFIG } from \"../../config\";\nexport class PtUserService {\n  getUsersUrl(nameFilter) {\n    let url = `${CONFIG.apiEndpoint}/users`;\n    if (nameFilter) {\n      url = url + '?name=' + nameFilter;\n    }\n    return url;\n  }\n  constructor(store) {\n    this.store = store;\n  }\n  fetchUsers() {\n    fetch(this.getUsersUrl()).then(response => response.json()).then(data => {\n      data.forEach(u => {\n        u.avatar = `${CONFIG.apiEndpoint}/photo/${u.id}`;\n      });\n      this.store.set('users', data);\n    });\n  }\n}","map":{"version":3,"names":["CONFIG","PtUserService","getUsersUrl","nameFilter","url","apiEndpoint","constructor","store","fetchUsers","fetch","then","response","json","data","forEach","u","avatar","id","set"],"sources":["/home/mati/Dev/Learning/Telerik-learning/rpstrackerreact-master/src/core/services/pt-user-service.ts"],"sourcesContent":["import { CONFIG } from \"../../config\";\nimport { Store } from \"../state/app-store\";\nimport { PtUser } from \"../models/domain\";\n\nexport class PtUserService {\n    private getUsersUrl(nameFilter?: string): string {\n        let url = `${CONFIG.apiEndpoint}/users`;\n        if (nameFilter) {\n            url = url + '?name=' + nameFilter;\n        }\n        return url;\n    }\n\n    constructor(\n        private store: Store\n    ) { }\n\n    public fetchUsers() {\n        fetch(this.getUsersUrl())\n            .then(response => response.json())\n            .then((data: PtUser[]) => {\n                data.forEach(u => {\n                    u.avatar = `${CONFIG.apiEndpoint}/photo/${u.id}`;\n                });\n                this.store.set('users', data);\n            });\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AAIrC,OAAO,MAAMC,aAAa,CAAC;EACfC,WAAWA,CAACC,UAAmB,EAAU;IAC7C,IAAIC,GAAG,GAAG,GAAGJ,MAAM,CAACK,WAAW,QAAQ;IACvC,IAAIF,UAAU,EAAE;MACZC,GAAG,GAAGA,GAAG,GAAG,QAAQ,GAAGD,UAAU;IACrC;IACA,OAAOC,GAAG;EACd;EAEAE,WAAWA,CACCC,KAAY,EACtB;IAAA,KADUA,KAAY,GAAZA,KAAY;EACpB;EAEGC,UAAUA,CAAA,EAAG;IAChBC,KAAK,CAAC,IAAI,CAACP,WAAW,CAAC,CAAC,CAAC,CACpBQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAc,IAAK;MACtBA,IAAI,CAACC,OAAO,CAACC,CAAC,IAAI;QACdA,CAAC,CAACC,MAAM,GAAG,GAAGhB,MAAM,CAACK,WAAW,UAAUU,CAAC,CAACE,EAAE,EAAE;MACpD,CAAC,CAAC;MACF,IAAI,CAACV,KAAK,CAACW,GAAG,CAAC,OAAO,EAAEL,IAAI,CAAC;IACjC,CAAC,CAAC;EACV;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}